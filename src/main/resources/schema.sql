DROP TABLE IF EXISTS "FILM_USER_LIKES";
DROP TABLE IF EXISTS "FILM_GENRE";
DROP TABLE IF EXISTS "FRIENDS";
DROP TABLE IF EXISTS "USER";
DROP TABLE IF EXISTS "USERS";
DROP TABLE IF EXISTS "FILM";
DROP TABLE IF EXISTS "SP_GENRE";
DROP TABLE IF EXISTS "SP_MPA";
DROP TABLE IF EXISTS "SP_FRIENDSHIP_STATUS";

CREATE TABLE IF NOT EXISTS "FILM" (
    "ID" SERIAL PRIMARY KEY,
    "NAME" VARCHAR(255),
    "DESCRIPTION" VARCHAR(255),
    "RELEASE_DATE" DATE,
    "DURATION" INT,
    "RATE" INT,
    "MPA_ID" INT
);

CREATE TABLE IF NOT EXISTS "FILM_USER_LIKES" (
     "FILM_ID" BIGINT NOT NULL,
     "USER_ID" BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS "FILM_GENRE" (
    "FILM_ID" BIGINT NOT NULL,
    "GENRE_ID" BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS "USERS" (
    "ID" SERIAL PRIMARY KEY,
    "EMAIL" VARCHAR(255),
    "LOGIN" VARCHAR(255) UNIQUE NOT NULL,
    "NAME" VARCHAR(255),
    "BIRTHDAY" DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS "FRIENDS" (
    "USER_ID" BIGINT NOT NULL,
    "FRIEND_ID" BIGINT NOT NULL,
    "STATUS_ID" BIGINT
);

CREATE TABLE IF NOT EXISTS "SP_GENRE" (
    "ID" SERIAL PRIMARY KEY,
    "NAME" VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS "SP_MPA" (
    "ID" SERIAL PRIMARY KEY,
    "NAME" VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS "SP_FRIENDSHIP_STATUS" (
    "ID" SERIAL PRIMARY KEY,
    "NAME" VARCHAR(255)
);

ALTER TABLE "FILM_USER_LIKES" ADD FOREIGN KEY ("FILM_ID") REFERENCES "FILM" ("ID");

ALTER TABLE "FILM_USER_LIKES" ADD FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID");

ALTER TABLE "FILM_GENRE" ADD FOREIGN KEY ("FILM_ID") REFERENCES "FILM" ("ID");

ALTER TABLE "FRIENDS" ADD FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID");

ALTER TABLE "FRIENDS" ADD FOREIGN KEY ("FRIEND_ID") REFERENCES "USERS" ("ID");

ALTER TABLE "FILM_GENRE" ADD FOREIGN KEY ("GENRE_ID") REFERENCES "SP_GENRE" ("ID");

ALTER TABLE "FILM" ADD FOREIGN KEY ("MPA_ID") REFERENCES "SP_MPA" ("ID");

ALTER TABLE "FRIENDS" ADD FOREIGN KEY ("STATUS_ID") REFERENCES "SP_FRIENDSHIP_STATUS" ("ID");
